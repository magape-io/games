var Config = { hitBasescore: 250, baseScore: 500, clickLevel: [750, 1e3, 1500], clickSpeedScore: [300, 200, 100], bomb: 20, blockWidth: 85, canvasWidth: 640, canvasHeight: 960, promptTime: 3e3, dbHitNum: 5, setLevelList: function (a) { for (var b = this, c = 0; c < a.length; c++) b.level[c].star = a[c] }, setStarScore: function (a, b) { this.level[a].star = b, user.setLevelLocation(a, b) }, level: [{ num: 12, star: 0, time: 15, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 12, star: 0, time: 15, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 14, star: 0, time: 15, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 14, star: 0, time: 16, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 16, star: 0, time: 17, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 16, star: 0, time: 17, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 18, star: 0, time: 18, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 18, star: 0, time: 18, data: [[0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 20, star: 0, time: 20, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 20, star: 0, time: 20, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 20, star: 0, time: 20, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 20, star: 0, time: 20, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 22, star: 0, time: 20, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 22, star: 0, time: 23, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 24, star: 0, time: 25, data: [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0]] }, { num: 24, star: 0, time: 25, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 24, star: 0, time: 25, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 24, star: 0, time: 25, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 26, star: 0, time: 28, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 26, star: 0, time: 28, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 28, star: 0, time: 30, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 28, star: 0, time: 30, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 28, star: 0, time: 30, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 30, star: 0, time: 34, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 30, star: 0, time: 34, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 32, star: 0, time: 36, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 32, star: 0, time: 36, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 34, star: 0, time: 38, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 36, star: 0, time: 40, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 38, star: 0, time: 45, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 38, star: 0, time: 45, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }, { num: 38, star: 0, time: 45, data: [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0]] }] }; !function (a) { var b = (a.user = { score: 0, doubleHit: [], baseScore: Config.baseScore, preClickTime: 0, level: 0, bombNum: 0, currentLevel: 0, doubleHitNum: 0, clsDoubleHitScore: function (a) { for (var b = a.length, c = a.pop(), d = c.time, e = Config.clickLevel, f = Config.clickSpeedScore, g = Config.hitBasescore, h = 0; h < e.length; h++) if (d < e[h]) { 2 == h && this.doubleHitNum++, this.score = this.score + this.baseScore + f[h] + b * g; break } this.setScore(this.score) }, clsClickScore: function () { this.score = this.score + this.baseScore, this.setScore(this.score) }, setScore: function (a) { this.transformScore(a, !1) }, transformScore: function (a) { a = a ? a : this.score; var b = a.toString().split(""); return Game.normalScene.renderGold(b), b }, resetData: function () { this.score = 0, this.setScore(this.score), this.doubleHit.length = 0, this.doubleHitNum = 0 }, setUserLocaltion: function (a) { this.level = a.level, this.bombNum = a.bomb }, getUserLocation: function () { var a = localStorage.getItem("link_user"); return a && (a = JSON.parse(a)), a }, setLevelLocation: function (a, b) { var c = this.getUserLocation(); c || (c = { level: 0, bomb: 0, leverList: [] }), c.leverList[a] = b, a > c.level && (c.level = a, user.level = a), c = JSON.stringify(c), localStorage.setItem("link_user", c) }, setBomb: function (a) { var b = this.getUserLocation(); b || (b = { level: 0, bomb: 0, leverList: [] }), b.bomb = a, user.bombNum = a, b = JSON.stringify(b), localStorage.setItem("link_user", b) } }, user.getUserLocation()); b && (user.setUserLocaltion(b), Config.setLevelList(b.leverList)) }(window), function () { window.onload = function () { a.init() }; var a = window.Game = { bombList: [], init: function () { var b = this; b.blockWidth = Config.blockWidth, b.width = Config.canvasWidth, b.height = Config.canvasHeight, b.initStage(), b.creatLoadScene(), b.asset = new a.Asset, b.asset.on("complete", function () { b.asset.off("complete"), b.stage.removeChild(a.loadScene), setTimeout(function () { b.asset.clearLodingIt(), b.initScenes() }, 100) }.bind(b)), b.asset.load() }, initStage: function () { var a = this; a.adaptive(); var b = a.stage = new Hilo.Stage({ width: a.width, height: a.height, scaleX: a.scale, scaleY: a.scale }); document.body.appendChild(b.canvas), a.ticker = new Hilo.Ticker(60), a.ticker.addTick(Hilo.Tween), a.ticker.addTick(b), a.ticker.start(), a.stage.enableDOMEvent(Hilo.event.POINTER_END, !0), a.initBackground(), a.centered() }, centered: function () { var a = document.getElementById("bg"); a.style.backgroundSize = "cover" }, adaptive: function () { var a = this, b = window.innerWidth, c = window.innerHeight, d = b / this.width, e = c / this.height; a.scale = d > e ? e : d }, initBackground: function () { this.width * this.scale, this.height * this.scale; document.body.insertBefore(Hilo.createElement("div", { id: "bg", style: { position: "absolute", background: "url(img/bg.jpg) no-repeat", backgroundSize: "100%,100%", width: "100%", height: "100%" } }), this.stage.canvas), this.initShareBtn() }, initScenes: function () { var b = this; this.gameHomeScene = new a.GameHomeScene({ width: this.width, height: this.height, homeImage: this.asset.logo, startImage: this.asset.homeBtn, logoImage: this.asset.boyaaLogo }).addTo(this.stage), this.gameHomeScene.initBtn(); var c = b.setShareData(1); b.weixinShare(c) }, weixinShare: function () { var a = this; document.addEventListener("WeixinJSBridgeReady", function () { WeixinJSBridge && (WeixinJSBridge.on("menu:share:appmessage", function () { WeixinJSBridge.invoke("sendAppMessage", { img_url: a.shareData.imgUrl, link: a.shareData.gamelink, desc: a.shareData.fContent, title: a.shareData.fTitle }, function () { _czc.push(["_trackEvent", "鐐瑰嚮", "鍒嗕韩缁欐湅鍙�"]) }) }), WeixinJSBridge.on("menu:share:timeline", function () { WeixinJSBridge.invoke("shareTimeline", { img_url: a.shareData.imgUrl, img_width: "640", img_height: "640", link: a.shareData.gamelink, desc: a.shareData.tContent, title: a.shareData.tTitle }, function () { _czc.push(["_trackEvent", "鐐瑰嚮", "鍒嗕韩鍒版湅鍙嬪湀"]) }) })), WeixinJSBridge.call("showOptionMenu") }, !1) }, setShareData: function (a, b) { var c = this; c.shareData = {}; var d = parseInt(Date.now() + 1e11 * Math.random()); c.shareData.imgUrl = "http://wbpkh5001.17c.cn/html5/h5mini/link2/img/link.jpg", c.shareData.gamelink = "http://url.cn/UfEDGd" + d, 0 == a ? (c.shareData.tContent = "鏂扮増杩炶繛鐪嬶紝鐜╃殑涓嶆槸娓告垙锛岃€屾槸鏇剧粡鐨勫洖蹇嗭紒", c.shareData.tTitle = "鎴戝湪杩炶繛鐪嬪皬娓告垙鑾峰緱" + b + "鍒嗭紝涓嶆湇鏉ユ垬锛�", c.shareData.fContent = "鎴戝湪杩炶繛鐪嬪皬娓告垙鑾峰緱" + b + "鍒嗭紝涓嶆湇鏉ユ垬锛�", c.shareData.fTitle = "鍗氶泤杩炶繛鐪�") : (c.shareData.tContent = c.shareData.fContent = "鏂扮増杩炶繛鐪嬶紝鐜╃殑涓嶆槸娓告垙锛岃€屾槸鏇剧粡鐨勫洖蹇嗭紒", c.shareData.tTitle = c.shareData.fTitle = "鍗氶泤杩炶繛鐪�") }, creatNormalScene: function () { var b = this, c = a.stage; a.normalScene || (a.normalScene = new a.NormalScene({ width: b.width, height: b.height, image: a.asset.normalBtn, starImg: a.asset.normalStar, numberGlyphs: a.asset.numberGlyphs, clockImg: a.asset.clock, timeImg: a.asset.ttime, bombBar: a.asset.bombBar, normalTop: a.asset.normalTop }).addTo(c), a.normalScene.initBtn(), a.normalScene.visible = !1) }, creatGraphScene: function (b) { var c = this, d = a.stage; user.currentLevel = b; var e = Config.level[b]; a.graphScene && d.removeChild(a.graphScene), a.gameoverScene || (a.graphScene = new a.GraphScene({ width: c.width, height: 780, image: a.asset.blockImgs, y: 70, levelInfo: e }).addTo(d), a.normalScene.visible = !0, a.normalScene.newLevel(), ALG.LLK = a.graphScene, a.Control.promptTimedCount()) }, creatTipScene: function (b) { var c = this, d = a.stage; c.setShareData(0, user.score), a.gameoverScene || (a.gameoverScene = new a.GameoverScene({ width: c.width, height: c.height, type: b, gameoverImg: a.asset.gameOver, bgImg: a.asset.tipBg, btnsImg: a.asset.tipBtn, starImg: a.asset.scoreStar, titleImg: a.asset.tipTitle, bomb: a.asset.bombBar, numberGlyphs: a.asset.numberGlyphs }).addTo(d)) }, creatBomb: function (b, c) { var d = this, c = a.graphScene, e = new a.Bomb({ width: d.blockWidth, height: d.blockWidth, x: b.y * d.blockWidth + c.leftGap, y: b.x * d.blockWidth + c.topGap }); e.posX = b.x, e.posY = b.y, c.addChild(e), d.bombList.push(e), e.initBomb() }, creatBlockage: function (b, c) { var d = this, e = new a.Blockage({ type: b.type, width: d.blockWidth, height: d.blockWidth, x: b.j * d.blockWidth + c.leftGap, y: b.i * d.blockWidth + c.topGap }); return e.posX = b.i, e.posY = b.j, e.blockageType = b.type, c.addChild(e), e }, creatLevelScene: function (b) { var c = this, d = a.stage; a.levelScene = new a.LevelScene({ width: c.width, height: c.height, image: a.asset.selectscene, pageLevel: b, starImg: a.asset.scoreStar }).addTo(d), a.levelScene.initBtn() }, creatLoadScene: function () { var b = this, c = a.stage; a.loadScene = new a.LoadScene({ width: b.width, height: b.height }), a.loadScene.addTo(c) }, creatStartScene: function (b) { var c = this, d = a.stage; a.startScene = new a.StartScene({ width: c.width, height: c.height, goImg: a.asset.go, readyImg: a.asset.ready, leve: b }), a.startScene.addTo(d) }, gameOver: function () { a.normalScene.resetData(), user.resetData(), a.Control.resetData(), this.resetBombList() }, resetBombList: function () { this.bombList = [] }, initShareBtn: function () { var a = "ontouchstart" in window, b = a ? "touchend" : "mouseup", c = document.getElementById("share"); c.addEventListener(b, function () { c.style.display = "none", _czc.push(["_trackEvent", "鐐瑰嚮", "鍒嗕韩閬僵灞�"]) }) } } }(), function (a) { var b = a.LoadScene = Hilo.Class.create({ Extends: Hilo.Container, constructor: function (a) { b.superclass.constructor.call(this, a), this.init(a) }, init: function () { var a = this, b = a.height / 3, c = new Hilo.Text({ text: "鍔犺浇璧勬簮涓�...", width: this.width, font: "30px arial", textAlign: "center", color: "#fff", x: 0, y: b }), d = a.pre = new Hilo.Text({ text: 0, width: this.width, font: "100px arial", textAlign: "center", color: "#fff", x: 0, y: b + 40 }); a.addChild(c, d) }, setPer: function (a) { this.pre.text = a } }) }(window.Game), function (a) { a.Asset = Hilo.Class.create({ Mixes: Hilo.EventMixin, load: function () { var a = [{ id: "logo", src: "img/logo.png" }, { id: "homeBtn", src: "img/home-btn.png" }, { id: "number", src: "img/sprites/number.png" }, { id: "boyaa_logo", src: "img/boyaa-logo.png" }, { id: "scoreStar", src: "img/select-star.png" }, { id: "normalStar", src: "img/normal-star.png" }, { id: "normalBtn", src: "img/normal-btn.png" }, { id: "normalBg", src: "img/normal.png" }, { id: "selectBg", src: "img/select.png" }, { id: "dispel", src: "img/sprites/dispel.png" }, { id: "bombb", src: "img/sprites/bombb.png" }, { id: "prompt", src: "img/sprites/prompt.png" }, { id: "clock", src: "img/clock.png" }, { id: "bombBar", src: "img/bomb.png" }, { id: "normalTop", src: "img/normal-top.jpg" }, { id: "tipBg", src: "img/tip-bg.png" }, { id: "tipBtn", src: "img/tip-btn.png" }, { id: "tipTitle", src: "img/tip-title.png" }, { id: "ready", src: "img/ready.png" }, { id: "go", src: "img/go.png" }, { id: "hSprite", src: "img/path/h-sprite.png" }, { id: "vSprite", src: "img/path/v-sprite.png" }, { id: "selectscene", src: "img/selectscene.png" }, { id: "bollBlue", src: "img/blockage/boll-blue.png" }, { id: "bollRed", src: "img/blockage/boll-red.png" }, { id: "grape", src: "img/blockage/grape.png" }, { id: "lollopop", src: "img/blockage/lollopop.png" }, { id: "lollopopBlue", src: "img/blockage/lollopop-blue.png" }, { id: "strawberry", src: "img/blockage/strawberry.png" }, { id: "watermelon", src: "img/blockage/watermelon.png" }, { id: "lollopopGreen", src: "img/blockage/lollopop-green.png" }, { id: "lollopopRed", src: "img/blockage/lollopop-red.png" }, { id: "orange", src: "img/blockage/orange.png" }, { id: "peach", src: "img/blockage/peach.png" }, { id: "star", src: "img/blockage/star.png" }]; this.queue = new Hilo.LoadQueue, this.queue.add(a), this.queue.on("complete", this.onComplete.bind(this)), this.queue.start(), this.initLoding() }, initLoding: function () { var b = this, c = b.queue; this.loadIt = setInterval(function () { var b = c.getLoaded(), d = c.getTotal(); per = Math.floor(b / d * 100) + "%", a.loadScene.setPer(per) }, 5) }, clearLodingIt: function () { clearInterval(this.loadIt) }, onComplete: function () { this.logo = this.queue.get("logo").content, this.homeBtn = this.queue.get("homeBtn").content, this.boyaaLogo = this.queue.get("boyaa_logo").content, this.scoreStar = this.queue.get("scoreStar").content, this.normalBg = this.queue.get("normalBg").content, this.selectBg = this.queue.get("selectBg").content, this.normalBtn = this.queue.get("normalBtn").content, this.clock = this.queue.get("clock").content, this.bombBar = this.queue.get("bombBar").content, this.normalTop = this.queue.get("normalTop").content, this.normalStar = this.queue.get("normalStar").content, this.ready = this.queue.get("ready").content, this.go = this.queue.get("go").content, this.selectscene = this.queue.get("selectscene").content, this.tipBg = this.queue.get("tipBg").content, this.tipBtn = this.queue.get("tipBtn").content, this.tipTitle = this.queue.get("tipTitle").content, this.hSpriteAtlas = new Hilo.TextureAtlas({ image: this.queue.get("hSprite").content, frames: [[0, 0, 580, 35], [0, 35, 580, 35], [0, 70, 580, 35], [0, 105, 580, 35], [0, 140, 580, 35]], sprites: { hSprite: [0, 1, 2, 3, 4] } }), this.vSpriteAtlas = new Hilo.TextureAtlas({ image: this.queue.get("vSprite").content, frames: [[0, 0, 35, 580], [35, 0, 35, 580], [70, 0, 35, 580], [105, 0, 35, 580], [140, 0, 35, 580]], sprites: { vSprite: [0, 1, 2, 3, 4] } }), this.promptAtlas = new Hilo.TextureAtlas({ image: this.queue.get("prompt").content, frames: [[0, 0, 80, 77], [80, 0, 80, 77], [160, 0, 80, 77], [240, 0, 80, 77], [320, 0, 80, 77], [400, 0, 80, 77], [480, 0, 80, 77], [560, 0, 80, 77], [640, 0, 80, 77], [720, 0, 80, 77]], sprites: { prompt: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] } }), this.blockBombingAtlas = new Hilo.TextureAtlas({ image: this.queue.get("bombb").content, frames: [[0, 0, 99, 86], [99, 0, 99, 86], [198, 0, 99, 86], [297, 0, 99, 86], [396, 0, 99, 86], [495, 0, 99, 86]], sprites: { bomb: [0, 1, 2, 3, 4, 5] } }), this.dispelAtlas = new Hilo.TextureAtlas({ image: this.queue.get("dispel").content, frames: [[0, 0, 99, 79], [99, 0, 99, 78], [198, 0, 99, 78], [297, 0, 99, 79], [396, 0, 99, 79], [495, 0, 99, 79], [594, 0, 99, 79], [693, 0, 99, 78], [792, 0, 99, 78], [891, 0, 99, 79], [990, 0, 99, 79], [1089, 0, 99, 79]], sprites: { dispel: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] } }); var a = this.queue.get("number").content; this.numberGlyphs = { 0: { image: a, rect: [0, 0, 28, 38] }, 1: { image: a, rect: [28, 0, 28, 38] }, 2: { image: a, rect: [56, 0, 28, 38] }, 3: { image: a, rect: [84, 0, 28, 38] }, 4: { image: a, rect: [112, 0, 28, 38] }, 5: { image: a, rect: [140, 0, 28, 38] }, 6: { image: a, rect: [168, 0, 28, 38] }, 7: { image: a, rect: [196, 0, 28, 38] }, 8: { image: a, rect: [224, 0, 28, 38] }, 9: { image: a, rect: [252, 0, 28, 38] } }; var b = this.queue.get("bollBlue").content, c = this.queue.get("bollRed").content, d = this.queue.get("grape").content, e = this.queue.get("lollopop").content, f = this.queue.get("lollopopBlue").content, g = this.queue.get("strawberry").content, h = this.queue.get("watermelon").content, i = this.queue.get("lollopopGreen").content, j = this.queue.get("lollopopRed").content, k = this.queue.get("orange").content, l = this.queue.get("peach").content, m = this.queue.get("star").content; this.blockImgs = ["", b, c, d, e, k, f, l, i, m, j, g, h], this.queue.off("complete"), this.fire("complete") } }) }(window.Game), function (a) { var b = a.LevelScene = Hilo.Class.create({ Extends: Hilo.Container, btnGx: 30, btnGy: 15, wBtn: 145, hBtn: 93, topG: 50, blockG: 20, pLevelNum: 20, blockList: [], row: 4, blockW: 115, blockH: 115, levelGap: 1, constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.init(a) }, init: function (a) { var b = this, c = b.height - b.hBtn - b.btnGy, d = 2 * b.btnGx, e = b.width - b.wBtn - 2 * b.btnGx, f = b.levelNum = Config.level.length, g = this.properties.pageLevel, h = b.back = Math.floor(g / b.pLevelNum), i = b.next = f - (g + b.pLevelNum) > 0 ? !0 : !1; if (h) { var j = b.backBtn = new Hilo.Bitmap({ id: "resetBtn", image: a.image, rect: [0, 125, b.wBtn, b.hBtn], x: d, y: c }); b.addChild(j) } if (i) { var k = b.nextBtn = new Hilo.Bitmap({ id: "resetBtn", image: a.image, rect: [310, 125, b.wBtn, b.hBtn], x: e, y: c }); b.addChild(k) } var l = b.homeBtn = new Hilo.Bitmap({ id: "resetBtn", image: a.image, rect: [145, 125, 165, b.hBtn], x: 250, y: c }); b.addChild(l), b.initLevel() }, initLevel: function () { for (var a = this, b = a.blockW, c = a.blockH, d = c / 4, e = [4, 3, a.blockW, a.blockW], f = (a.disBlockColor, a.row), g = f - 1, h = a.blockG, i = Math.floor((a.width - b * f - h * g) / 2), j = this.properties.pageLevel, k = a.levelNum - j, l = k < a.pLevelNum ? k : a.pLevelNum, m = user.level + 1, n = 0; l > n; n++) { var o = Math.floor(n / f), p = Math.floor(n % f), q = p * (b + h) + i, r = o * (c + h) + a.topG, s = n + j + 1, t = a.nextText = new Hilo.Text({ text: n + j + 1, width: b, height: c, font: "60px arial", textAlign: "center", color: "#934209", x: 0, y: d }); if (t.level = n + j, s > m + a.levelGap) { var e = [127, 3, 115, 115]; t.text = "" } var u = new Hilo.Container({ id: "textContainer", width: b, height: c, x: q, y: r }), v = new Hilo.Bitmap({ id: "resetBtn", image: a.properties.image, rect: e, x: 0, y: 0 }); if (u.addChild(v, t), a.drawStar(u, n + j), a.addChild(u), s <= m + a.levelGap) { var w = { text: t }; a.blockList.push(w) } } }, drawStar: function (a, b) { var c = this, d = Config.level[b].star, e = 36; if (d) for (var f = 0; d > f; f++) { var g = new Hilo.Bitmap({ image: c.properties.starImg, rect: [0, 0, e, 35], width: e, height: 35, x: 2 + f * e, y: a.height - 25 }); a.addChild(g) } }, initBtn: function () { var b = this, c = a.stage, d = this.properties.pageLevel; b.homeBtn.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, c.removeChild(b), a.gameHomeScene.visible = !0, _czc.push(["_trackEvent", "鐐瑰嚮", "涓婚〉鎸夐挳"]) }.bind(this)), b.back && b.backBtn.on(Hilo.event.POINTER_END, function (e) { e._stopped = !0, c.removeChild(b), a.creatLevelScene(d - b.pLevelNum), _czc.push(["_trackEvent", "鐐瑰嚮", "涓婁竴椤垫寜閽�", d - b.pLevelNum]) }.bind(this)), b.next && b.nextBtn.on(Hilo.event.POINTER_END, function (e) { e._stopped = !0, c.removeChild(b), a.creatLevelScene(d + b.pLevelNum), _czc.push(["_trackEvent", "鐐瑰嚮", "涓嬩竴椤垫寜閽�", d + b.pLevelNum]) }.bind(this)); for (var e = 0; e < b.blockList.length; e++) b.blockList[e].text.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, b.visible = !1, c.removeChild(b), a.creatStartScene(this.level), _czc.push(["_trackEvent", "鐐瑰嚮", "閫夋嫨鍏冲崱", this.level + 1]) }) } }) }(window.Game), function (a) { var b = a.StartScene = Hilo.Class.create({ Extends: Hilo.Container, constructor: function (a) { b.superclass.constructor.call(this, a), this.level = a.leve, this.init(a) }, init: function (a) { { var b = this, c = (b.go = new Hilo.Bitmap({ image: a.goImg, rect: [0, 0, 275, 121], x: 200, y: 50 }), new Hilo.Bitmap({ image: a.readyImg, rect: [0, 0, 439, 119], x: 100, y: 50 }).addTo(this)); Hilo.Tween.to(c, { x: 100, y: 400 }, { time: 500, loop: !1, onComplete: function () { setTimeout(function () { b.addGo() }, 100) } }) } }, addGo: function () { var b = this; b.removeAllChildren(), b.go.addTo(b), Hilo.Tween.to(b.go, { x: 200, y: 400 }, { time: 500, loop: !1, onComplete: function () { setTimeout(function () { var c = a.stage; c.removeChild(b), a.creatGraphScene(b.level) }, 300) } }) } }) }(window.Game), function (a) { var b = a.GameoverScene = Hilo.Class.create({ Extends: Hilo.Container, topG: 200, leftG: 75, tipW: 510, tipH: 565, btnG: 20, btnY: 320, btnX: 110, btnW: 281, btnH: 91, starY: 100, goldY: 150, tipY: 230, bgColor: "#fcfcee", text: ["鍐嶇粰鐐瑰姏灏卞彲浠ラ€氬叧鍟︼紒", "钀岃悓鍝掞紝瓒呰禐锛岄€氬叧鍜紒", "涓嶈绂诲紑澶箙鍝�"], titleRect: [[0, 104, 397, 105], [0, 209, 397, 105], [0, 0, 397, 103]], constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.init(a) }, init: function () { var a = this, b = a.btnY + a.btnH + a.btnG, c = new Hilo.Container({ width: this.width, height: this.height, alpha: .4, x: 0, y: 0 }); c.setBgFill("#000"), a.addChild(c); var d = new Hilo.Text({ text: a.text[a.properties.type], width: a.tipW, font: "36px arial", textAlign: "center", color: "#f5f0ff", x: 0, y: a.tipY }), e = a.shareBtn = new Hilo.Bitmap({ image: a.properties.btnsImg, rect: [0, 290, a.btnW, a.btnH], x: a.btnX, y: b }), f = a.tipContainer = new Hilo.Container({ width: this.tipW, height: this.tipH, x: a.leftG, y: a.topG }), g = 20, h = new Hilo.Bitmap({ image: a.properties.titleImg, rect: a.titleRect[a.properties.type], x: 60, y: 0 }), i = new Hilo.Bitmap({ image: a.properties.bgImg, rect: [0, 0, 509, 545], x: 0, y: g }), j = user.currentLevel + 1 >= Config.level.length ? !0 : !1; if (1 == a.properties.type) { if (j) { var k = a.againBtn = new Hilo.Bitmap({ image: a.properties.btnsImg, rect: [0, 98, a.btnW, a.btnH], x: a.btnX, y: a.btnY }); f.addChild(i, h, k) } else { var l = a.nextBtn = new Hilo.Bitmap({ image: a.properties.btnsImg, rect: [0, 195, a.btnW, a.btnH], x: a.btnX, y: a.btnY }); f.addChild(i, h, l) } var m = a.drawStar(f); Config.setStarScore(user.currentLevel, m), a.renderGold(), a.addBombNum() } else if (2 == a.properties.type) { var n = a.restoreBtn = new Hilo.Bitmap({ image: a.properties.btnsImg, rect: [0, 0, a.btnW, a.btnH], x: a.btnX, y: a.btnY }); f.addChild(i, h, n) } else { var k = a.againBtn = new Hilo.Bitmap({ image: a.properties.btnsImg, rect: [0, 98, a.btnW, a.btnH], x: a.btnX, y: a.btnY }); f.addChild(i, h, k) } f.addChild(d, e), a.addChild(f), a.initBtn() }, addBombNum: function () { var b = this, c = Config.level[user.currentLevel].num / 2, d = user.bombNum; return user.doubleHitNum >= c - Config.dbHitNum ? (d += 1, a.normalScene.clacBomb(d), b.renderBomb(), d) : d }, renderBomb: function () { var a = this, b = 5, c = new Hilo.Text({ text: "+", width: 25, font: "28px arial", textAlign: "center", color: "#fbc94c", x: 0, y: b }), d = new Hilo.Bitmap({ image: a.properties.bomb, rect: [0, 0, 45, 48], x: 20, y: b, scaleY: .6, scaleX: .6 }); a.gContainer.addChild(c, d) }, renderGold: function () { for (var a = this, b = user.transformScore(), c = a.gContainer = new Hilo.Container({ width: 125, height: 85, x: 150, y: a.goldY }), d = 0; d < b.length; d++) { var e = new Hilo.BitmapText({ glyphs: a.properties.numberGlyphs, letterSpacing: 4, text: b[d], x: 50 + 28 * d, y: 10 }); c.addChild(e) } a.tipContainer.addChild(c) }, drawStar: function (b) { var c = this, d = a.normalScene.count, e = a.normalScene.currentCount, f = Math.ceil(d / 3), g = Math.ceil(e / f); g = 0 >= g ? 1 : g; for (var h = 0; g > h; h++) { var i = new Hilo.Bitmap({ image: c.properties.starImg, rect: [0, 0, 36, 35], width: 36, height: 35, x: 200 + 40 * h, y: c.starY }); b.addChild(i) } return g }, initBtn: function () { var b = this, c = a.stage; b.shareBtn.on(Hilo.event.POINTER_END, function (a) { a._stopped = !0, document.getElementById("share").style.display = "block", _czc.push(["_trackEvent", "鐐瑰嚮", "鍒嗕韩鎸夐挳"]) }.bind(this)), b.againBtn ? b.againBtn.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, c.removeChild(b), a.gameoverScene = null, a.setShareData(1), c.removeChild(a.graphScene), a.creatStartScene(user.currentLevel), _czc.push(["_trackEvent", "鐐瑰嚮", "缁撴潫-寮€濮嬫父鎴忔寜閽�"]) }.bind(this)) : b.restoreBtn ? b.restoreBtn.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, c.removeChild(b), a.gameoverScene = null, a.setShareData(1), a.normalScene.setTimeInterval(), a.Control.playPrompt(), a.Control.promptTimedCount(), _czc.push(["_trackEvent", "鐐瑰嚮", "鏆傚仠-缁х画娓告垙鎸夐挳"]) }.bind(this)) : b.nextBtn && b.nextBtn.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, c.removeChild(b), a.gameoverScene = null, a.setShareData(1), c.removeChild(a.graphScene), a.creatStartScene(user.currentLevel + 1), _czc.push(["_trackEvent", "鐐瑰嚮", "涓嬩竴鍏虫寜閽�"]) }.bind(this)) } }) }(window.Game), function (a) { var b = a.Blockage = Hilo.Class.create({ Extends: Hilo.Container, blockImgWidth: 106, blockBgWidth: 90, blockGap: 5, topGap: 80, leftGap: 0, constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.init(a) }, init: function (b) { var c = this; c.blockShadow = c.width + c.blockGap, c.image = a.asset.blockImgs[b.type], c.normalBg = a.asset.normalBg, c.selectBg = a.asset.selectBg, c.initBlock() }, initBlock: function () { var a = this, b = a.bg = new Hilo.Bitmap({ id: "bg", image: a.normalBg, width: a.blockShadow, height: a.blockShadow, rect: [0, 0, a.blockImgWidth, a.blockImgWidth], x: 0, y: 0 }), c = a.mBlock = new Hilo.Bitmap({ id: "mBlock", image: a.image, width: a.width, height: a.width, rect: [0, 0, a.blockBgWidth, a.blockBgWidth], x: 0, y: 0 }); a.addChild(b, c), a.initBtn() }, addNormalBg: function () { var a = this; a.bg.drawable.image = a.normalBg, a.mBlock.drawable.image = a.image }, addHeighlightBg: function () { var a = this, b = a.image; a.bg.drawable.image = a.selectBg, a.mBlock.drawable.image = b }, toOtherStatus: function (b) { var c = this; c.image = a.asset.blockImgs[b], c.mBlock.drawable.image = c.image, c.blockageType = b }, initBtn: function () { { var b = this; a.stage } b.mBlock && b.mBlock.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0, a.Control.responseClick(b) }.bind(this)) }, toEmpty: function () { this.removeAllChildren() }, toDestroy: function () { a.graphScene.removeChild(this) }, toBomb: function () { var b = this, c = a.graphScene, d = new Hilo.Sprite({ x: b.x - 30, y: b.y - 18, width: b.width + 55, height: b.height + 30, loop: !1, interval: 6 }); d.addFrame(a.asset.blockBombingAtlas.getSprite("bomb")), b.toEmpty(), c.addChild(d), setTimeout(function () { b.toDestroy(), c.removeChild(d) }, 500) }, toDispel: function () { var b = this, c = a.graphScene, d = new Hilo.Sprite({ x: b.x - 30, y: b.y - 18, width: b.width + 55, height: b.height + 30, loop: !1, interval: 6 }); d.addFrame(a.asset.dispelAtlas.getSprite("dispel")), b.toEmpty(), c.addChild(d), setTimeout(function () { b.toDestroy(), c.removeChild(d) }, 600) }, addPrompt: function () { var b = a.graphScene, c = this, d = new Hilo.Sprite({ x: c.x - 10, y: c.y - 8, width: c.blockShadow + 10, height: c.blockShadow + 10, loop: !0, interval: 10 }); d.addFrame(a.asset.promptAtlas.getSprite("prompt")), b.addChild(d), c.promptt = d, d.on(Hilo.event.POINTER_END, function (b) { b._stopped = !0, a.Control.responseClick(c) }.bind(this)) }, removePrompt: function () { var b = this, c = a.graphScene; b.promptt && (c.removeChild(b.promptt), b.promptt = null) }, stopPrompt: function () { var a = this; a.promptt && a.promptt.stop() }, playPrompt: function () { var a = this; a.promptt && a.promptt.play() }, removeHeighlight: function () { var a = this; a.addNormalBg() }, addHeighlight: function () { var a = this; a.addHeighlightBg() } }) }(window.Game), function (a) { var b = a.Control = { bomb: Config.bomb, promptList: [], resetData: function () { var a = this; a.removePrompt() }, responseClick: function (a) { var b = this, c = ALG.LLK, d = a.blockageType; if (c.ClickQueue.length) { var e = c.ClickQueue.length - 1, f = c.ClickQueue[e]; (f.x !== a.posX || f.y !== a.posY) && (c.dataArr[a.posX][a.posY].addHeighlight(), c.ClickQueue.push(new c.point(a.posX, a.posY, d))) } else c.dataArr[a.posX][a.posY].addHeighlight(), c.ClickQueue.push(new c.point(a.posX, a.posY, d)); if (2 === c.ClickQueue.length) { var e = c.ClickQueue.length - 1, g = c.ClickQueue[e], h = c.ClickQueue[e - 1]; if (g.type === h.type) if (ALG.isDispel(c.dataMap, g, h)) { var i = JSON.parse(JSON.stringify(c.path)); setTimeout(function () { c.generaPath(i, g, h), c.dataArr[h.x][h.y].toDispel(), c.dataArr[g.x][g.y].toDispel(), c.ClickQueue.length = 0, b.clickHandle(g, h) }, 50) } else c.dataArr[h.x][h.y].removeHeighlight(), c.ClickQueue.length = 0, c.ClickQueue.push(g); else c.dataArr[h.x][h.y].removeHeighlight(), c.ClickQueue.length = 0, c.ClickQueue.push(g) } }, bombBlockage: function () { var a = this, b = ALG.LLK, c = b.dataMap, d = b.sameTypeArr, e = (b.dataArr, ALG.isHasNext(c, d)); e && (setTimeout(function () { b.dataArr[e.p1.x][e.p1.y].toBomb(), b.dataArr[e.p2.x][e.p2.y].toBomb(), a.removePrompt() }, 100), a.clickHandle(e.p1, e.p2)) }, handleBomb: function () { var b = this; b.bombBlockage(), setTimeout(function () { b.bombBlockage() }, 50), a.normalScene.clacBomb(user.bombNum - 1) }, clickHandle: function (a, b) { var c = this; c.clearPromptTimedCount(), c.promptTimedCount(), c.removePrompt(), ALG.handleRemove(a, b), c.handleDoubleHit() }, removePrompt: function () { for (var a = this, b = a.promptList.length, c = 0; b > c; c++) { var d = a.promptList.pop(); d.removePrompt() } }, stopPrompt: function () { for (var a = this, b = a.promptList.length, c = 0; b > c; c++) { var d = a.promptList[c]; d.stopPrompt() } }, playPrompt: function () { for (var a = this, b = a.promptList.length, c = 0; b > c; c++) { var d = a.promptList[c]; d.playPrompt() } }, handleDoubleHit: function () { var a = (new Date).getTime(), b = a - user.preClickTime; user.preClickTime = a; var c = user.doubleHit, d = Config.clickLevel, e = d[d.length - 1]; if (e > b) { var f = { time: b }; c.push(f); var g = JSON.parse(JSON.stringify(c)); user.clsDoubleHitScore(g) } else c.length = 0, user.clsClickScore() }, promptTimedCount: function () { var a = this; a.clearPromptTimedCount(), a.pt = setTimeout(function () { a.findNext() }, Config.promptTime) }, clearPromptTimedCount: function () { var a = this; clearTimeout(a.pt) }, findNext: function () { var a = this, b = ALG.LLK, c = b.dataArr; if (b.ClickQueue.length) { var d = b.ClickQueue[0], e = ALG.getNextPoint(d); e ? (c[e.x][e.y].addPrompt(), c[d.x][d.y].addPrompt(), a.savePromptPoint(c[e.x][e.y], c[d.x][d.y])) : a.promptTowPoint() } else a.promptTowPoint() }, savePromptPoint: function (a, b) { this.promptList = [a, b] }, promptTowPoint: function () { var a = this, b = ALG.LLK, c = b.dataMap, d = b.sameTypeArr, e = b.dataArr, f = ALG.isHasNext(c, d); if (f) { var g = f.p1, h = f.p2; a.savePromptPoint(e[g.x][g.y], e[h.x][h.y]), e[g.x][g.y].addPrompt(), e[h.x][h.y].addPrompt(), a.clearPromptTimedCount() } } }; b.resetData() }(Game); var ALG = {
    isRemoveAll: function (a) { for (var b = 0; b < a.length; b++) if (0 !== a[b].length) return !1; return !0 }, isHasNext: function (a, b) { for (var c = this, d = 0; d < b.length; d++) for (var e = 1; e < b[d].length; e++) if (this.isDispel(a, b[d][e - 1], b[d][e])) { var f = { p1: b[d][e - 1], p2: b[d][e] }; return c.setPathEmpty(), f } return !1 }, getNextPoint: function (a) { for (var b = this, c = b.LLK.sameTypeArr[a.type], d = 0; d < c.length; d++) { var e = c[d]; if ((e.x !== a.x || e.y !== a.y) && b.isDispel(b.LLK.dataMap, a, e)) return b.setPathEmpty(), e } return !1 }, modifData: function (a) { this.LLK.dataMap[a.x][a.y] = 0; var b = this.getPointIndex(a); this.LLK.sameTypeArr[a.type].splice(b, 1) }, getPointIndex: function (a, b) { for (var b = this.LLK.sameTypeArr[a.type], c = 0; c < b.length; c++) { var d = b[c]; if (d.x === a.x && d.y === a.y) return c } }, changeData: function () { for (var a = [], b = 0, c = this.LLK.sameTypeArr, d = this.LLK.dataArr, e = 0; e < c.length; e++) if (0 !== c[e].length && (a[b++] = e, b >= 2)) { for (var f = a[b - 1], g = a[b - 2], h = c[f].length, i = 0; h > i; i++) { var j = c[f][0]; d[j.x][j.y].toOtherStatus(g), this.LLK.dataMap[j.x][j.y] = g, j.type = g, c[g].push(j), c[f].splice(0, 1) } return } }, handleRemove: function (a, b) { { var c = this; c.LLK.dataMap } c.modifData(a), c.modifData(b); var d = Game.Control; c.isRemoveAll(c.LLK.sameTypeArr) ? (d.clearPromptTimedCount(), setTimeout(function () { Game.creatTipScene(1), Game.gameOver() }, 800)) : c.isHasNext(c.LLK.dataMap, c.LLK.sameTypeArr) || setTimeout(function () { c.changeData() }, 200), setTimeout(function () { c.setPathEmpty() }, 200) }, ishasSame: function (a, b) { for (var c = 0; c < a.length; c++) if (b.x === a[c].x && b.y === a[c].y) return !0; return !1 }, isDispel: function (a, b, c) { return this.one_line(a, b, c, !1) ? !0 : this.two_line(a, b, c) ? !0 : this.three_line(a, b, c) ? !0 : !1 }, savePath: function (a, b) { var c = { start: a, end: b }; this.LLK.path.push(c) }, saveRimPath: function (a, b, c) {
        this.savePath(a, a), a.y === b.y ? this.savePath({ x: a.x, y: c }, { x: b.x, y: c }) : this.savePath({ x: c, y: a.y }, { x: c, y: b.y }), this.savePath(b, b)
    }, setPathEmpty: function () { Game.graphScene && (Game.graphScene.path.length = 0) }, one_line: function (a, b, c) { var d, e; if (b.x === c.x) { d = b.y - c.y > 0 ? c.y : b.y, e = b.y - c.y < 0 ? c.y : b.y; for (var f = d + 1; e > f; f++) if (0 !== a[b.x][f]) return !1; return this.savePath(b, c), !0 } if (b.y === c.y) { d = b.x - c.x > 0 ? c.x : b.x, e = b.x - c.x < 0 ? c.x : b.x; for (var f = d + 1; e > f; f++) if (0 !== a[f][b.y]) return !1; return this.savePath(b, c), !0 } return !1 }, two_line: function (a, b, c) { var d = this, e = b.x, f = b.y, g = c.x, h = c.y, i = JSON.parse(JSON.stringify(a)); if (0 == a[g][f]) { i[g][f] = a[g][h]; var j = { x: g, y: f, type: b.type }; if (this.one_line(a, j, c) && this.one_line(a, b, j)) return 1; d.setPathEmpty() } if (0 == a[e][h]) { i[e][h] = a[g][h]; var j = { x: e, y: h, type: b.type }; if (this.one_line(a, j, c) && this.one_line(a, b, j)) return 1; d.setPathEmpty() } return 0 }, three_line: function (a, b, c) { var d, e = b.x, f = b.y, g = c.x, h = c.y; switch (rowNum = a[0].length, e === g && (d = "upDown"), f === h && (d = "leftRight"), d = g > e ? h > f ? rowNum / 2 > e ? "rdlu" : "rdul" : rowNum / 2 > e ? "ruld" : "rudl" : h > f ? e > rowNum / 2 ? "ldru" : "ldur" : e > rowNum / 2 ? "lurd" : "ludr") { case "upDown": return this.up(a, b, c) || this.down(a, b, c) ? !0 : !1; case "leftRight": return this.left(a, b, c) || this.right(a, b, c) ? !0 : !1; case "rdlu": return this.right(a, b, c) || this.down(a, b, c) || this.left(a, b, c) || this.up(a, b, c) ? !0 : !1; case "rdul": return this.right(a, b, c) || this.down(a, b, c) || this.up(a, b, c) || this.left(a, b, c) ? !0 : !1; case "ruld": return this.right(a, b, c) || this.up(a, b, c) || this.left(a, b, c) || this.down(a, b, c) ? !0 : !1; case "rudl": return this.right(a, b, c) || this.up(a, b, c) || this.down(a, b, c) || this.left(a, b, c) ? !0 : !1; case "ldru": return this.left(a, b, c) || this.down(a, b, c) || this.right(a, b, c) || this.up(a, b, c) ? !0 : !1; case "ldur": return this.left(a, b, c) || this.down(a, b, c) || this.up(a, b, c) || this.right(a, b, c) ? !0 : !1; case "lurd": return this.left(a, b, c) || this.up(a, b, c) || this.right(a, b, c) || this.down(a, b, c) ? !0 : !1; case "ludr": return this.left(a, b, c) || this.up(a, b, c) || this.down(a, b, c) || this.right(a, b, c) ? !0 : !1; default: return 0 } }, left: function (a, b, c) { for (var d = this, e = b.x, f = b.y, g = (c.x, c.y, JSON.parse(JSON.stringify(a))), h = f - 1; h >= 0 && 0 == a[e][h]; h--) { g[e][h] = a[e][f]; var i = { x: e, y: h, type: b.type }; if (this.two_line(g, i, c)) return this.savePath(b, i), 1; g[e][h] = 0, d.setPathEmpty() } return !1 }, right: function (a, b, c) { for (var d = this, e = b.x, f = b.y, g = (c.x, c.y, JSON.parse(JSON.stringify(a))), h = f + 1; h < a[0].length && 0 == a[e][h]; h++) { g[e][h] = a[e][f]; var i = { x: e, y: h, type: b.type }; if (this.two_line(g, i, c)) return this.savePath(b, i), 1; g[e][h] = 0, d.setPathEmpty() } return !1 }, up: function (a, b, c) { for (var d = this, e = b.x, f = b.y, g = (c.x, c.y, JSON.parse(JSON.stringify(a))), h = e - 1; h >= 0 && 0 == a[h][f]; h--) { g[h][f] = a[e][f]; var i = { x: h, y: f, type: b.type }; if (this.two_line(g, i, c)) return this.savePath(b, i), 1; g[h][f] = 0, d.setPathEmpty() } return !1 }, down: function (a, b, c) { for (var d = this, e = b.x, f = b.y, g = (c.x, c.y, JSON.parse(JSON.stringify(a))), h = e + 1; h < a.length && 0 == a[h][f]; h++) { g[h][f] = a[e][f]; var i = { x: h, y: f, type: b.type }; if (this.two_line(g, i, c)) return this.savePath(b, i), 1; g[h][f] = 0, d.setPathEmpty() } return !1 }
}; !function (a) { var b = a.GraphScene = Hilo.Class.create({ Extends: Hilo.Container, ClickQueue: [], dataArr: [], dataMap: [], sameTypeArr: [], path: [], t: [], pathW: 36, constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.init(a) }, init: function (b) { var c = this, d = c.levelInfo = b.levelInfo; c.blockImgs = b.image, c.clickImage = b.clickImage, c.blockWidth = a.blockWidth, c.generateDataMap(d) }, generateBlockage: function (a) { for (var b = this.blockImgs.length - 1, c = [], d = 4, e = Math.floor(b / d), f = b - e * (d - 1), g = [e, e, e, f], h = 0; a > h; h++) { var i = h % d, j = Math.floor(Math.random() * g[i]) + i * e + 1; c[h] = j } return c = c.concat(c) }, point: function (a, b, c) { this.x = a, this.y = b, this.type = c }, generateDataMap: function (a) { var b = this; b.createArray(a), b.createSameTypeArr(); var c = a.data; c = JSON.stringify(c), c = JSON.parse(c), b.graph = c; for (var d = (b.blockWidth, a.data), e = a.num / 2, f = b.generateBlockage(e), g = 0; g < d.length; g++) for (var h = 0; h < d[0].length; h++) if (0 !== d[g][h]) { var i = f.pop(); b.dataMap[g][h] = i; var j = b.sameTypeArr[i]; j[j.length] = new b.point(g, h, i) } else b.dataMap[g][h] = 0; ALG.LLK = { path: [] }; var k = ALG.isHasNext(b.dataMap, b.sameTypeArr); k ? b.generateBoard(b.dataMap) : b.generateDataMap(b.levelInfo) }, createSameTypeArr: function () { for (var a = this, b = a.blockImgs.length, c = new Array(b), d = 0; b > d; d++) c[d] = []; a.sameTypeArr = c }, createArray: function (a) { for (var b = this, c = a.data[0].length, d = a.data.length, e = new Array(d), f = new Array(d), g = 0; d > g; g++) e[g] = new Array(c), f[g] = new Array(c); b.dataArr = e, b.dataMap = f }, generateBoard: function (b) { var c = this, d = b[0].length, e = b.length; c.topGap = (c.height - e * c.blockWidth) / 2, c.leftGap = (c.width - d * c.blockWidth) / 2; for (var f = (c.properties, 0) ; e > f; f++) for (var g = 0; d > g; g++) { var h = b[f][g]; if (h) { var i = { i: f, j: g, type: h }, j = a.creatBlockage(i, c); c.dataArr[f][g] = j } } }, generaPath: function (a) { for (var b = this, c = 0, d = 0; d < a.length; d++) { var e = a[d].start, f = a[d].end, g = e.y * b.blockWidth + b.leftGap + c, h = e.x * b.blockWidth + b.topGap + c; e = { x: g, y: h }, g = f.y * b.blockWidth + b.leftGap + c, h = f.x * b.blockWidth + b.topGap + c, f = { x: g, y: h }; var i = b.getPathWH(e, f); b.drawPath(i) } }, getPathWH: function (a, b) { var c = this, d = (c.blockWidth - c.pathW) / 2, e = d / 2; d += 5; var f = {}; if (a.x == b.x) { f.x = a.x + d, d += 15; var g = a.y - b.y; f.y = 0 > g ? a.y + d : b.y + d, f.height = Math.abs(g) + e, f.width = c.pathW, f.type = 0 } else { f.y = a.y + d, d += 15; var g = a.x - b.x; f.x = 0 > g ? a.x + d : b.x + d, f.height = c.pathW, f.width = Math.abs(g) + e, f.type = 1 } return f }, drawPath: function (b) { var c = a.graphScene, d = new Hilo.Sprite({ x: b.x, y: b.y, width: b.width, height: b.height, loop: !1, interval: 5 }); d.addFrame(b.type ? a.asset.hSpriteAtlas.getSprite("hSprite") : a.asset.vSpriteAtlas.getSprite("vSprite")), c.addChild(d), setTimeout(function () { c.removeChild(d) }, 500) } }) }(window.Game), function (a) { var b = a.Bomb = Hilo.Class.create({ Extends: Hilo.Container, constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.showBomb(a.point) }, toEmpty: function () { this.removeAllChildren() }, showBomb: function () { var b = this, c = new Hilo.Sprite({ x: 0, y: 0, width: b.width, height: b.height, loop: !0, interval: 6 }); c.addFrame(a.asset.bombAtlas.getSprite("bomb")), b.addChild(c), b.bomb = c }, toEmpty: function () { this.removeAllChildren() }, toDestroy: function () { a.graphScene.removeChild(this) }, removeBomb: function () { var b = this; b.toEmpty(); var c = a.graphScene, d = new Hilo.Sprite({ x: b.x - 30, y: b.y - 18, width: b.width + 55, height: b.height + 30, loop: !1, interval: 11 }); d.addFrame(a.asset.bombBombingAtlas.getSprite("bomb")), c.addChild(d), setTimeout(function () { b.toDestroy(), c.removeChild(d) }, 1100) }, initBomb: function () { var b = this; b.bomb.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0, a.Control.handleBomb(b) }) } }) }(window.Game), function (a) { var b = a.GameHomeScene = Hilo.Class.create({ Extends: Hilo.Container, btnW: 390, btnH: 98, logoH: 325, logoW: 396, constructor: function (a) { b.superclass.constructor.call(this, a), this.init(a) }, init: function (a) { new Hilo.Bitmap({ id: "logo", image: a.homeImage, rect: [0, 0, 510, 550], x: 70, y: 0 }).addTo(this), new Hilo.Bitmap({ id: "boyaaLogo", image: a.logoImage, rect: [0, 0, 232, 55], x: 20, y: 40 }).addTo(this), this.startBtn = new Hilo.Bitmap({ image: a.startImage, rect: [0, 0, 348, 115], x: 150, y: 580 }).addTo(this), this.selectBtn = new Hilo.Bitmap({ image: a.startImage, rect: [0, 111, 348, 115], x: 150, y: 720 }).addTo(this) }, initBtn: function () { { var b = this; a.stage } b.startBtn.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0; var d = user.level; a.creatNormalScene(), a.creatStartScene(d), b.visible = !1, _czc.push(["_trackEvent", "鐐瑰嚮", "寮€濮嬫父鎴忔寜閽�"]) }.bind(b)), b.selectBtn.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0, a.creatNormalScene(), a.creatLevelScene(0), b.visible = !1, _czc.push(["_trackEvent", "鐐瑰嚮", "鍏冲崱閫夋嫨鎸夐挳"]) }.bind(b)) } }) }(window.Game), function (a) { var b = a.NormalScene = Hilo.Class.create({ Extends: Hilo.Container, btnGx: 30, btnGy: 5, bBtn: 92, topG: 10, bombNumW: 180, timeW: 135, constructor: function (a) { b.superclass.constructor.call(this, a), this.properties = a, this.init(a) }, init: function () { var a = this, b = a.height - a.bBtn - a.btnGy, c = this.stopBtn = new Hilo.Bitmap({ image: a.properties.image, rect: [162, 0, 164, 92], width: 164, height: 92, x: 340, y: b }), d = this.backBtn = new Hilo.Bitmap({ image: a.properties.image, rect: [0, 0, 164, 92], width: 164, height: 92, x: 140, y: b }), e = a.topContainer = new Hilo.Container({ width: a.width, height: 108 }); a.addChild(c, d, e), a.initTime(), a.renderBomb(), a.renderGoldContainer() }, initBtn: function () { var b = this, c = a.stage; b.stopBtn.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0, b.clearTime(), a.Control.clearPromptTimedCount(), a.creatTipScene(2), a.Control.stopPrompt(), _czc.push(["_trackEvent", "鐐瑰嚮", "娓告垙鏆傚仠鎸夐挳"]) }.bind(this)), b.backBtn.on(Hilo.event.POINTER_END, function (d) { d._stopped = !0, b.visible = !1, b.clearTime(), c.removeChild(a.graphScene), a.creatLevelScene(0), _czc.push(["_trackEvent", "鐐瑰嚮", "杩斿洖閫夋嫨鎸夐挳"]) }.bind(this)), b.bombBar.on(Hilo.event.POINTER_END, function (c) { c._stopped = !0, user.bombNum && a.Control.handleBomb(b), _czc.push(["_trackEvent", "鐐瑰嚮", "鐐稿脊鎸夐挳"]) }.bind(this)) }, initTime: function () { var a = this; a.resetTime(), a.renderTime() }, setTimeInterval: function () { var a = this; a.it = setInterval(function () { a.clacTime(a.currentCount--) }, 1e3) }, clearTime: function () { var a = this; clearInterval(a.it) }, resetTime: function () { var a = this, b = Config.level[user.currentLevel]; a.count = a.currentCount = b.time + 8 }, renderTime: function () { var a = this, b = new Hilo.Bitmap({ image: a.properties.clockImg, rect: [0, 0, 210, 47], x: 0, y: 0 }), c = a.ttime = new Hilo.Container({ id: "timeContainer", width: a.timeW, height: 20, x: 64, y: 12 }); c.setBgFill("#fab819"); var d = new Hilo.Container({ id: "timeContainer", width: 300, height: 70, x: 270, y: a.topG + 13, children: [b, c] }); a.topContainer.addChild(d), a.clacTime(this.count) }, clacTime: function (b) { var c = this, d = c.timeW / c.count * b; c.ttime.width = d, 0 >= b && setTimeout(function () { a.creatTipScene(0), a.gameOver() }, 500) }, renderBomb: function () { var a = this, b = a.width - 120, c = a.bombBar = new Hilo.Bitmap({ image: a.properties.bombBar, rect: [0, 0, 45, 48], x: 0, y: 10 }), d = a.bombNum = new Hilo.Text({ text: user.bombNum, width: 80, font: "35px arial", textAlign: "left", color: "#F5BC08;", x: 50, y: 10 }), e = a.bombBarContainer = new Hilo.Container({ width: 255, height: 70, x: b, y: a.topG, children: [d, c] }); a.topContainer.addChild(e) }, clacBomb: function (a) { var b = this; a = a > 0 ? a : 0, b.bombNum.text = a, user.setBomb(a) }, renderGoldContainer: function () { var a = this, b = this.star = new Hilo.Bitmap({ id: "star", image: a.properties.starImg, rect: [0, 0, 46, 44], x: 0, y: 0 }), c = a.goldContainer = new Hilo.Container({ id: "timeContainer", width: 225, height: 85, x: 20, y: a.topG + 10, children: [b] }); a.renderGold([0]), a.topContainer.addChild(c) }, renderGold: function (a) { var b = this; b.scoreContainer && b.goldContainer.removeChild(b.scoreContainer); for (var c = b.scoreContainer = new Hilo.Container({ id: "timeContainer", width: 125, height: 85, x: 50, y: 0 }), d = 0; d < a.length; d++) { var e = new Hilo.BitmapText({ glyphs: b.properties.numberGlyphs, letterSpacing: 4, text: a[d], x: 28 * d, y: 5 }); c.addChild(e) } b.goldContainer.addChild(c) }, resetData: function () { var a = this; a.clearTime(), a.renderGold([0]), a.resetTime(), a.clacTime(this.count) }, newLevel: function () { var a = this; a.resetTime(), a.setTimeInterval() } }) }(window.Game);